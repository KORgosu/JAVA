
// 오전 스마트기기공학과 2학년 19011850 박수환
package psh;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.regex.Pattern;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

public class PSH_1 {
	static String fname = "data/juso.txt";
	static String tmp_name;
	static String tmp_phone;
	static String tmp_age;
	static String tmp_birth;
	static char GUI_Order;
	static class GUI extends JFrame{
		GUI() throws IOException{
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // ㅡ ㅁ X 표시 만들고
	        setTitle("연락처관리프로그램 by 19011850_박수환");
	        
	        this.setLayout(new BorderLayout()); // 레이아웃 BorderLayout으로 설정
	        
	        JPanel panel = new JPanel();
	        Container c = this.getContentPane();
            c.setBackground(Color.GRAY);
            
            ///////////////////////////////////////////////////////////////////
	        JTextField ord = new JTextField(5);
            panel.add(new JLabel("입력된 번호 : "));
            panel.add(ord);
            this.add(panel, BorderLayout.NORTH);                        
            ///////////////////////////////////////////////////////////////////
            
            ///////////////////////////////////////////////////////////////////
            JPanel result = new JPanel();
            result.add(new JLabel("결과\n"));
            JTextArea result_box = new JTextArea(15, 40);  
            result.add(result_box);
            this.add(result, BorderLayout.EAST);            
            ///////////////////////////////////////////////////////////////////
            
            ///////////////////////////////////////////////////////////////////
            JPanel Write = new JPanel();
            Write.setLayout(new FlowLayout());
            JTextField txt_name = new JTextField(10);
            JTextField txt_age = new JTextField(10);
            JTextField txt_phone = new JTextField(10);
            JTextField txt_num = new JTextField(10);
            JTextField txt_birth = new JTextField(10);
            JTextField txt_delete_num = new JTextField(10);
            Write.add(new JLabel("이름을 입력 ==> "));
            Write.add(txt_name);
            Write.add(new JLabel("나이를 입력 ==> "));
            Write.add(txt_age);
            Write.add(new JLabel("전화번호를 입력 ==> "));
            Write.add(txt_phone);
            Write.add(new JLabel("학번을 입력 ==> "));
            Write.add(txt_num);
            Write.add(new JLabel("생년월일을 입력 ==> "));
            Write.add(txt_birth);
            Write.add(new JLabel("(3번 선택시 입력), 삭제할 행번호 => "));
            Write.add(txt_delete_num);
            this.add(Write);
            ///////////////////////////////////////////////////////////////////
            
            ///////////////////////////////////////////////////////////////////
            JPanel btn; // 왼쪽의 메뉴버튼 선택
            btn = new JPanel(new GridLayout(4, 1, 5, 5)); // 버튼 패널속 패널(GRID) 1X4, 수직수평간격 각각 5
            btn.setBackground(Color.WHITE);
            JButton btn0 = new JButton("1, 연락처 출력");
            btn0.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent e) {
                    GUI_Order = '1';
                    ord.setText("1");
                    try
                    {
                    	String str = "";
                		
                    	File f= new File(fname);
                    	if (!f.exists())
                    	{
                    		BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
                    		bw.close();
                    	}
                    		
                    	BufferedReader br = new BufferedReader(new FileReader(fname));
                    	int i;
                    		
                    	for (i = 1; ;i++)
                    	{
                    		if (!br.ready())
                    			break;
                    		else
                    		{
                    			str = br.readLine();
                    			result_box.setText(str);
                    		}
                    	}
                    		
                    	if (i == 1)
                    		result_box.setText(" ** 연락처 파일에 전화번호가 하나도 없어요. **");
                    		
                    	br.close();
                    } catch (Exception e1) {
                    	JOptionPane.showMessageDialog(null, e1.getMessage());
                    }
                    
                }
            });
            btn.add(btn0);
            
            JButton btn1 = new JButton("2, 연락처 등록");
            btn1.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent e) {
                	GUI_Order = '2';
                    ord.setText("2");
                    try
                    {
                    	//이름 체킹 특수문자
                		String specialCharactersString = "^[ㄱ-ㅎ가-힣a-zA-Z0-9]*$";
                		address adr = new address("", "", "", "", "");
                		
                		String wstr = "";
                		String check = "";
                		
                		int age_flag = 0;
                		int phone_flag = 0;
                		int i_age;
                		int birth_flag = 0;
                		
                		BufferedWriter bw = new BufferedWriter(new FileWriter(fname, true));
                		//이름에 특수기호 들어가면 안됨
                		check = txt_name.getText();
                		
                		if (Pattern.matches(specialCharactersString, check) == false)
                		{
                			result_box.setText("이름에 특수기호가 들어가면 안됩니다.");
                			bw.close();
                			return;
                		}
                		
                		tmp_name = check;
                		
                		
                		// 나이는 201아래로, 
                		check = txt_age.getText();
                		i_age = Integer.valueOf(check);
                		if (i_age > 200)
                		{
                			age_flag = 1;
                		}
                		if (age_flag == 1)
                		{
                			result_box.setText("나이는 200살을 넘을 수 없습니다.");
                			return;
                		}
                		tmp_age = check;
                		
                		
                		// 전화번호는 XXX-XXX or XXXX-XXXX

                		check = txt_phone.getText();
                		int k = 0;
                		int cnt_front = 0;
                		int cnt_rear = 0;
                		int num = check.length();
                		while(true) // 전화번호 앞자리 판단
                		{
                			char c = check.charAt(k);
                			if (c >= '0' && c <= '9')
                			{
                				k++;
                				cnt_front++;
                			}
                			if (c == '-')
                			{
                				k++;
                				break;
                			}
                			if (k == num)
                			{
                				phone_flag = 1;
                				break;
                			}
                		}
                		
                		while(true) // 출생월 입력 판단
                		{
                			char c = check.charAt(k);
                			if (c >= '0' && c <= '9')
                			{
                				k++;
                				cnt_rear++;
                			}
                			if (c == '-')
                			{
                				k++;
                				break;
                			}
                			if (k == num)
                			{
                				break;
                			}
                		}
                		if (cnt_front == 3 && cnt_rear == 3)//앞자리, 뒷자리가 각각 숫자 3개면 OK
                			phone_flag = 0;
                		else if (cnt_front == 4 && cnt_rear == 4)//앞자리, 뒷자리가 각각 숫자 4개여도 OK
                			phone_flag = 0;
                		else
                			phone_flag = 1;
                		if (phone_flag == 1)
                		{
                			result_box.setText("전화번호 입력양식에 맞지 않습니다.");
                			return;
                		}
                		tmp_phone = check;
                		
                		// 학번은 대충입력

                		adr.student_id = txt_num.getText();
                		
                		
                		// 생년월일의 양식은 XXXX-XX-XX
                		k = 0;
                		cnt_front = 0;
                		cnt_rear = 0;
                		int cnt_middle = 0;
                		check = txt_birth.getText();
                		
                		num = check.length();
                		while(true) // 출생년도 입력 판단
                		{
                			char c = check.charAt(k);
                			if (c >= '0' && c <= '9')
                			{
                				k++;
                				cnt_front++;
                			}
                			if (c == '-')
                			{
                				k++;
                				break;
                			}
                			if (k == num)
                			{
                				birth_flag = 1;
                				break;
                			}
                		}
                		
                		while(true) // 출생월 입력 판단
                		{
                			char c = check.charAt(k);
                			if (c >= '0' && c <= '9')
                			{
                				k++;
                				cnt_middle++;
                			}
                			if (c == '-')
                			{
                				k++;
                				break;
                			}
                			if (k == num)
                			{
                				birth_flag = 1;
                				break;
                			}
                		}
                		
                		while(true)
                		{
                			char c = check.charAt(k);
                			if (c >= '0' && c <= '9')
                			{
                				k++;
                				cnt_rear++;
                			}
                			if (c == '-')
                			{
                				k++;
                				birth_flag = 1;
                				break;
                			}
                			if (k == num)
                			{
                				break;
                			}
                		}
                		
                		if (cnt_front != 4)
                		{
                			birth_flag = 1;
                		}
                		if (cnt_middle != 2)
                		{
                			birth_flag = 1;
                		}
                		if (cnt_rear != 2)
                		{
                			birth_flag = 1;
                		}
                		
                		if (birth_flag == 1)
                		{
                			result_box.setText("생년월일 입력양식에 맞지 않습니다.");
                			return;
                		}
                		
                		tmp_birth = check;

                		
                		adr.name = tmp_name;
                		adr.age = tmp_age;
                		adr.phone = tmp_phone;
                		adr.date_of_birth = tmp_birth;
                		
                		wstr = adr.name + "\t" + adr.age + "\t" + adr.phone + "\t" + adr.student_id + "\t" + adr.date_of_birth;
                		
                		bw.write(wstr);
                		bw.newLine();
                		
                		result_box.setText("\n  *등록이 완료되었습니다.*  \n");

                		bw.close();
                		
                    } catch (Exception e1) {
                    	JOptionPane.showMessageDialog(null, e1.getMessage());
                    }
                }
            });
            btn.add(btn1);
            
            JButton btn2 = new JButton("3, 연락처 삭제");
            btn2.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent e) {
                	GUI_Order = '3';
                    ord.setText("3");
                    try
                    {      		
                		String[] read_str = new String[50];
                		String str = "";
                		String del_line = txt_delete_num.getText();
                		int line = Integer.valueOf(del_line);
                		int i, count = 0;
                		
                		BufferedReader br = new BufferedReader(new FileReader(fname));
                		
                		if (!br.ready()) {
                			result_box.setText("** 오류 : 연락처 파일이 없습니다!! **");
                			return;
                		}
                		
                		for (i = 0; i < 50; i++)
                		{
                			if ((str = br.readLine()) == null)
                				break;
                			if (i + 1 != line)
                			{
                				read_str[count] = str;
                				count++;
                			}
                			else
                			{
                				String send = "** " + line + "행이 삭제되었습니다. " + "**";
                				result_box.setText(send);
                			}
                		}
                		
                		br.close();
                		
                		BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
                		for (i = 0; i < count; i++)
                		{
                			bw.write(read_str[i]);
                			bw.newLine();
                		}
                		
                		bw.close();
                    } catch (Exception e1) {
                    	JOptionPane.showMessageDialog(null, e1.getMessage());
                    }
                }
            });
            btn.add(btn2);
            
            JButton btn3 = new JButton("4, 끝내기");
            btn3.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent e) {
                	GUI_Order = '4';
                    ord.setText("4");
                    // 4를 누르면 프로그램 종료
                    setVisible(false);
                }
            });
            btn.add(btn3);
            this.add(btn, BorderLayout.WEST);
            ///////////////////////////////////////////////////////////////////            
            
            ///////////////////////////////////////////////////////////////////
            	        
	        setSize(800, 350);
            setVisible(true);
		}
	}
	
	
	//////////////////////////////////////////////////////////////
	// 여기서부터는 SWING이 아닌 Console을 이용해 결과값을 표시하는 식입니다. //
	//////////////////////////////////////////////////////////////
	
	static class address{
		String name;
		String age;
		String phone;
		String student_id;
		String date_of_birth;
		
		
		address(String s1, String s2, String s3, String s4, String s5){
			this.name = s1;
			this.age = s2;
			this.phone = s3;
			this.student_id = s4;
			this.date_of_birth = s5;
		}
	}
	
	public static void main(String[] args) throws IOException
	{
		new GUI();
		
		Scanner sc = new Scanner(System.in);
		String select = "";
		System.out.printf("\n### 친구 연락처 관리 ### \n");
		
		while(select != "4") {
			print_menu();
			System.out.printf("번호를 입력하세요 : ");
			select = sc.next();
			switch (select) {
			case "1":
				view_juso();
				break;
			case "2":
				add_juso();
				break;
			case "3":
				delete_juso();
				break;
			case "4":
				return;
			default:
				System.out.printf("\n 잘못입력하셨습니다. \n");
			}
		}
		
		sc.close();
			
	}
	
	static void print_menu()
	{
		System.out.printf("\n");
		System.out.printf("1, 연락처 출력 \n");
		System.out.printf("2, 연락처 등록 \n");
		System.out.printf("3, 연락처 삭제 \n");
		System.out.printf("4, 끝내기 \n");
		System.out.printf("\n");
	}
	
	static void view_juso() throws IOException
	{
		String str = "";
		
		File f= new File(fname);
		if (!f.exists())
		{
			BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
			bw.close();
		}
		
		BufferedReader br = new BufferedReader(new FileReader(fname));
		int i;
		
		for (i = 1; ;i++)
		{
			if (!br.ready())
				break;
			else
			{
				str = br.readLine();
				System.out.printf("%2d :  %s\n", i, str);
			}
		}
		
		if (i == 1)
			System.out.printf("\n ** 연락처 파일에 전화번호가 하나도 없어요. **\n");
		
		br.close();
	}
	
	static void add_juso() throws IOException
	{
		Scanner sc = new Scanner(System.in);
		
		//이름 체킹 특수문자
		String specialCharactersString = "^[ㄱ-ㅎ가-힣a-zA-Z0-9]*$";
		address adr = new address("", "", "", "", "");
		
		String wstr = "";
		String check = "";
		
		int age_flag = 0;
		int phone_flag = 0;
		int i_age;
		int birth_flag = 0;
		
		BufferedWriter bw = new BufferedWriter(new FileWriter(fname, true));
		
		//이름에 특수기호 들어가면 안됨
		System.out.printf("이름을 입력 ==> ");
		check = sc.nextLine();
		
		if (Pattern.matches(specialCharactersString, check) == false)
		{
			System.out.println("이름에 특수기호가 들어가면 안됩니다.\n");
			sc.close();
			bw.close();
			return;
		}
		
		tmp_name = check;
		
		
		// 나이는 201아래로, 
		System.out.printf("나이를 입력 ==> ");
		check = sc.nextLine();
		i_age = Integer.valueOf(check);
		if (i_age > 200)
		{
			age_flag = 1;
		}
		if (age_flag == 1)
		{
			System.out.println("나이는 200살을 넘을 수 없습니다.");
			return;
		}
		tmp_age = check;
		
		
		// 전화번호는 XXX-XXX or XXXX-XXXX
		System.out.printf("전화번호를 입력 ==> ");
		check = sc.nextLine();
		int k = 0;
		int cnt_front = 0;
		int cnt_rear = 0;
		int num = check.length();
		while(true) // 전화번호 앞자리 판단
		{
			char c = check.charAt(k);
			if (c >= '0' && c <= '9')
			{
				k++;
				cnt_front++;
			}
			if (c == '-')
			{
				k++;
				break;
			}
			if (k == num)
			{
				phone_flag = 1;
				break;
			}
		}
		
		while(true) // 출생월 입력 판단
		{
			char c = check.charAt(k);
			if (c >= '0' && c <= '9')
			{
				k++;
				cnt_rear++;
			}
			if (c == '-')
			{
				k++;
				break;
			}
			if (k == num)
			{
				break;
			}
		}
		if (cnt_front == 3 && cnt_rear == 3)//앞자리, 뒷자리가 각각 숫자 3개면 OK
			phone_flag = 0;
		else if (cnt_front == 4 && cnt_rear == 4)//앞자리, 뒷자리가 각각 숫자 4개여도 OK
			phone_flag = 0;
		else
			phone_flag = 1;
		if (phone_flag == 1)
		{
			System.out.println("전화번호 입력양식에 맞지 않습니다.");
			return;
		}
		tmp_phone = check;
		
		// 학번은 대충입력
		System.out.printf("학번을 입력 ==> ");
		adr.student_id = sc.nextLine();
		
		
		// 생년월일의 양식은 XXXX-XX-XX
		k = 0;
		cnt_front = 0;
		cnt_rear = 0;
		int cnt_middle = 0;
		System.out.printf("생년월일을 입력 ==> ");
		check = sc.nextLine();
		
		num = check.length();
		while(true) // 출생년도 입력 판단
		{
			char c = check.charAt(k);
			if (c >= '0' && c <= '9')
			{
				k++;
				cnt_front++;
			}
			if (c == '-')
			{
				k++;
				break;
			}
			if (k == num)
			{
				birth_flag = 1;
				break;
			}
		}
		
		while(true) // 출생월 입력 판단
		{
			char c = check.charAt(k);
			if (c >= '0' && c <= '9')
			{
				k++;
				cnt_middle++;
			}
			if (c == '-')
			{
				k++;
				break;
			}
			if (k == num)
			{
				birth_flag = 1;
				break;
			}
		}
		
		while(true)
		{
			char c = check.charAt(k);
			if (c >= '0' && c <= '9')
			{
				k++;
				cnt_rear++;
			}
			if (c == '-')
			{
				k++;
				birth_flag = 1;
				break;
			}
			if (k == num)
			{
				break;
			}
		}
		
		if (cnt_front != 4)
		{
			birth_flag = 1;
		}
		if (cnt_middle != 2)
		{
			birth_flag = 1;
		}
		if (cnt_rear != 2)
		{
			birth_flag = 1;
		}
		
		if (birth_flag == 1)
		{
			System.out.println("생년월일 입력양식에 맞지 않습니다.");
			return;
		}
		
		tmp_birth = check;

		
		adr.name = tmp_name;
		adr.age = tmp_age;
		adr.phone = tmp_phone;
		adr.date_of_birth = tmp_birth;
		
		wstr = adr.name + "\t" + adr.age + "\t" + adr.phone + "\t" + adr.student_id + "\t" + adr.date_of_birth;
		
		bw.write(wstr);
		bw.newLine();
		
		System.out.printf("\n  *등록이 완료되었습니다.*  \n");

		bw.close();
	}

	static void delete_juso() throws IOException
	{
		Scanner sc = new Scanner(System.in);
		
		String[] read_str = new String[50];
		String str = "";
		int del_line = 0;
		int i, count = 0;
		
		BufferedReader br = new BufferedReader(new FileReader(fname));
		
		if (!br.ready()) {
			System.out.printf("\n 연락처 파일이 없습니다!! \n");
			return;
		}
		
		System.out.printf("\n 삭제할 행 번호를 입력하세요 : ");
		del_line = sc.nextInt();
		for (i = 0; i < 50; i++)
		{
			if ((str = br.readLine()) == null)
				break;
			if (i + 1 != del_line)
			{
				read_str[count] = str;
				count++;
			}
			else
			{
				System.out.printf("%d 행이 삭제되었습니다. \n", del_line);
			}
		}
		
		br.close();
		
		BufferedWriter bw = new BufferedWriter(new FileWriter(fname));
		for (i = 0; i < count; i++)
		{
			bw.write(read_str[i]);
			bw.newLine();
		}
		
		bw.close();
	}
}
